package hibernate;
// Generated 6 ene 2024, 13:03:03 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
/**
 * Usuario generated by hbm2java
 */
public class Usuario implements java.io.Serializable {
	Hibernate model= new Hibernate();
	private Integer id;
	private String username;
	private String correo;
	private String contrasenaEncriptada;
	private Integer edad;
	private Boolean esMenor;
	private Set musicas = new HashSet(0);
	private Set juegoses = new HashSet(0);
	private Set usuariosForIdUsuario1 = new HashSet(0);
	private Set usuariosForIdUsuario2 = new HashSet(0);
	private Set comprases = new HashSet(0);
	private Set historials = new HashSet(0);
	private Tarjetacredito tarjetacredito;

	public Usuario() {
	}

	public Usuario(String username, String correo, String contrasenaEncriptada, int edad2, boolean esMenor2) {
		this.username = username;
		this.correo = correo;
		this.contrasenaEncriptada = contrasenaEncriptada;
		this.edad=edad2;
		this.esMenor=esMenor2;
	}

	public Usuario(String username, String correo, String contrasenaEncriptada, Integer edad, Boolean esMenor,
			Set musicas, Set juegoses, Set usuariosForIdUsuario1, Set usuariosForIdUsuario2, Set comprases,
			Set historials, Tarjetacredito tarjetacredito) {
		this.username = username;
		this.correo = correo;
		this.contrasenaEncriptada = contrasenaEncriptada;
		this.edad = edad;
		this.esMenor = esMenor;
		this.musicas = musicas;
		this.juegoses = juegoses;
		this.usuariosForIdUsuario1 = usuariosForIdUsuario1;
		this.usuariosForIdUsuario2 = usuariosForIdUsuario2;
		this.comprases = comprases;
		this.historials = historials;
		this.tarjetacredito = tarjetacredito;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getCorreo() {
		return this.correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	public String getContrasenaEncriptada() {
		return this.contrasenaEncriptada;
	}

	public void setContrasenaEncriptada(String contrasenaEncriptada) {
		this.contrasenaEncriptada = contrasenaEncriptada;
	}

	public Integer getEdad() {
		return this.edad;
	}

	public void setEdad(Integer edad) {
		this.edad = edad;
	}

	public Boolean getEsMenor() {
		return this.esMenor;
	}

	public void setEsMenor(Boolean esMenor) {
		this.esMenor = esMenor;
	}

	public Set getMusicas() {
		return this.musicas;
	}

	public void setMusicas(Set musicas) {
		this.musicas = musicas;
	}

	public Set getJuegoses() {
		return this.juegoses;
	}

	public void setJuegoses(Set juegoses) {
		this.juegoses = juegoses;
	}

	public Set getUsuariosForIdUsuario1() {
		return this.usuariosForIdUsuario1;
	}

	public void setUsuariosForIdUsuario1(Set usuariosForIdUsuario1) {
		this.usuariosForIdUsuario1 = usuariosForIdUsuario1;
	}

	public Set getUsuariosForIdUsuario2() {
		return this.usuariosForIdUsuario2;
	}

	public void setUsuariosForIdUsuario2(Set usuariosForIdUsuario2) {
		this.usuariosForIdUsuario2 = usuariosForIdUsuario2;
	}

	public Set getComprases() {
		return this.comprases;
	}

	public void setComprases(Set comprases) {
		this.comprases = comprases;
	}

	public Set getHistorials() {
		return this.historials;
	}

	public void setHistorials(Set historials) {
		this.historials = historials;
	}

	public Tarjetacredito getTarjetacredito() {
		return this.tarjetacredito;
	}

	public void setTarjetacredito(Tarjetacredito tarjetacredito) {
		this.tarjetacredito = tarjetacredito;
	}

	public void agregarAmigo(Usuario nuevoAmigo) {
		 SessionFactory sessionFactory=model.Model();
		 try (Session session = sessionFactory.openSession()) {
		        session.beginTransaction();
		        // Cargar el usuario actual y el nuevo amigo desde la base de datos
		        Usuario usuario = session.get(Usuario.class, id);
		        nuevoAmigo = session.get(Usuario.class,nuevoAmigo.id);
		        // AÃ±adir un nuevo amigo al conjunto usuariosForIdUsuario2
		        usuario.getUsuariosForIdUsuario2().add(nuevoAmigo);
		        session.getTransaction().commit();
		    } catch (Exception e) {
		        e.printStackTrace();
		    }
	}
}
